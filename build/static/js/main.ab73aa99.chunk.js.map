{"version":3,"sources":["components/views/NotFound/index.js","components/views/NotFound/NotFound.js","components/styles/searchHeroes.js","components/SearchHeroes/index.js","components/SearchHeroes/SearchHeroes.js","components/styles/character.js","components/styles/comics.js","components/Comic/index.js","components/Comic/Comic.js","components/Comics/index.js","components/Comics/Comics.js","components/styles/series.js","components/Serie/index.js","components/Serie/Serie.js","components/Series/index.js","components/Series/Series.js","components/styles/stories.js","components/Storie/index.js","components/Storie/Storie.js","components/Stories/index.js","components/Stories/Stories.js","components/Character/index.js","components/Character/Character.js","config/index.js","db/mockedCharacters.js","api/comics.js","api/series.js","api/stories.js","api/index.js","api/characters.js","routes/Search/styles/styles.js","routes/Search/index.js","routes/Search/components/SearchView.js","components/views/App/App.js","serviceWorker.js","index.js"],"names":["NotFound","react_default","a","createElement","href","target","Component","SearchHeroesContainer","styled","div","_templateObject","InputHeroes","input","_templateObject2","SearchButton","button","_templateObject3","SearchHeroes","_ref","handleChange","_useState","useState","_useState2","Object","slicedToArray","name","setName","type","value","onChange","_ref2","onClick","role","aria-label","StyledCharacter","character_templateObject","props","selected","Header","character_templateObject2","Content","character_templateObject3","StyledComic","comics_templateObject","Comic","comic","resourceURI","key","Comics","comics","items","map","index","components_Comic","StyledSerie","series_templateObject","Serie","serie","Series","series","length","components_Serie","StyledStorie","stories_templateObject","StyledStories","stories_templateObject2","Storie","storie","Stories","stories","components_Storie","Character","state","_this","character","nextProps","this","setState","_this$props","handleClick","idx","_this$state","description","_this$state$thumbnail","thumbnail","path","extension","characterImg","concat","src","alt","components_Comics","components_Stories","components_Series","React","apikey","filters","characters","attributionHTML","attributionText","code","copyright","data","count","limit","offset","results","available","collectionURI","returned","events","id","modified","urls","url","total","etag","status","options","params","api","getComics","URL","Promise","asyncToGenerator","regenerator_default","mark","_callee","resolve","reject","wrap","_context","prev","next","axios","sent","t0","console","error","stop","_x","_x2","apply","arguments","getComic","_ref3","_callee2","_ref4","_context2","_x3","_x4","getCharacters","undefined","mockedCharacters","getCharacter","getSeries","getSerie","getStories","getStorie","CharacterContainer","styles_templateObject","active","CharacterTitle","h1","styles_templateObject2","SearchContainer","selectedIndex","MarvelAPI","_this2","components_SearchHeroes","components_Character","customHistory","createBrowserHistory","App","Router","history","Switch","Route","render","Search","component","Boolean","window","location","hostname","match","ReactDOM","views_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab73aa99.chunk.js","sourcesContent":["import NotFound from './NotFound';\n\nexport default NotFound;\n","import React, { Component } from 'react';\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div>\n        Página no encontrada prueba{' '}\n        <a href=\"/app/search\" target=\"_self\">\n          aquí\n        </a>\n      </div>\n    );\n  }\n}\n","import styled from 'styled-components';\n\nexport const SearchHeroesContainer = styled.div`\n  height: 100px;\n  padding: 2rem auto;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const InputHeroes = styled.input`\n  padding: 0.5rem;\n  font-size: 1.2rem;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 0.2rem 0.7rem;\n  font-size: 26px;\n  background: cornflowerblue;\n`;\n","import SearchHeroes from './SearchHeroes';\n\nexport default SearchHeroes;\n","import React, { useState } from 'react';\nimport {\n  SearchHeroesContainer,\n  InputHeroes,\n  SearchButton,\n} from '../styles/searchHeroes';\n\nconst SearchHeroes = ({ handleChange }) => {\n  const [name, setName] = useState('Thor');\n\n  return (\n    <SearchHeroesContainer>\n      <InputHeroes\n        name=\"heroe\"\n        type=\"text\"\n        value={name}\n        onChange={({ target }) => setName(target.value)}\n      />\n      <SearchButton onClick={() => handleChange(name)}>\n        <span role=\"img\" aria-label=\"magnifier\">\n          🔍\n        </span>\n      </SearchButton>\n    </SearchHeroesContainer>\n  );\n};\n\nexport default SearchHeroes;\n","import styled from 'styled-components';\n\nexport const StyledCharacter = styled.div`\n  background-color: ${(props) =>\n    props.selected ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.8)'};\n  color: ${({ selected }) =>\n    selected ? 'rgba(255, 255, 255, 0.8)' : 'rgba(0, 0, 0, 0.8)'};\n  width: 100%;\n  cursor: pointer;\n`;\n\nexport const Header = styled.div`\n  padding: 0;\n  img {\n    object-fit: contain;\n    width: 100%;\n    height: 100%;\n  }\n\n  h4,\n  p {\n    padding: 0 1rem;\n  }\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 10px;\n  padding: 0 1rem;\n`;\n","import styled from 'styled-components';\n\nexport const StyledComic = styled.div`\n  width: 100%;\n\n  h4 {\n    line-height: 0.9rem;\n  }\n\n  p {\n    font-size: 0.5rem;\n  }\n`;\n","import Comic from './Comic';\n\nexport default Comic;\n","import React from 'react';\nimport { StyledComic } from '../styles/comics';\n\nconst Comic = ({ comic }) => {\n  const { resourceURI, name } = comic;\n  return (\n    <StyledComic>\n      <p key={resourceURI}>{name}</p>\n    </StyledComic>\n  );\n};\n\nexport default Comic;\n","import Comics from './Comics';\n\nexport default Comics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comic from '../Comic';\nimport { StyledComic } from '../styles/comics';\n\nconst Comics = ({ comics }) => {\n  return (\n    <StyledComic>\n      <h4>Comics</h4>\n      {comics.items.map((comic, index) => {\n        if (index <= 2) {\n          return <Comic key={comic.resourceURI} comic={comic} />;\n        }\n        return null;\n      })}\n    </StyledComic>\n  );\n};\n\nComics.propTypes = {\n  comics: PropTypes.object.isRequired,\n};\n\nexport default Comics;\n","import styled from 'styled-components';\n\nexport const StyledSerie = styled.div`\n  width: 100%;\n\n  h4 {\n    line-height: 0.9rem;\n  }\n\n  p {\n    font-size: 0.5rem;\n  }\n`;\n","import Serie from './Serie';\n\nexport default Serie;\n","import React from 'react';\nimport { StyledSerie } from '../styles/series';\n\nconst Serie = ({ serie }) => {\n  const { resourceURI, name } = serie;\n  return <StyledSerie key={resourceURI}>{name}</StyledSerie>;\n};\n\nexport default Serie;\n","import Series from './Series';\n\nexport default Series;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Serie from '../Serie';\nimport { StyledSerie } from '../styles/series';\n\nconst Series = ({ series }) => {\n  return (\n    <StyledSerie>\n      <h4>Series</h4>\n      {series.items.length &&\n        series.items.map((serie, index) => {\n          if (index <= 2) {\n            return <Serie key={serie.resourceURI} serie={serie} />;\n          }\n          return null;\n        })}\n    </StyledSerie>\n  );\n};\n\nSeries.propTypes = {\n  series: PropTypes.object.isRequired,\n};\n\nexport default Series;\n","import styled from 'styled-components';\n\nexport const StyledStorie = styled.div`\n  width: 100%;\n\n  h4 {\n    line-height: 0.9rem;\n  }\n\n  p {\n    font-size: 0.5rem;\n  }\n`;\n\nexport const StyledStories = styled.div`\n  width: 100%;\n\n  h4 {\n    line-height: 0.9rem;\n  }\n\n  p {\n    font-size: 0.5rem;\n  }\n`;\n","import Storie from './Storie';\n\nexport default Storie;\n","import React from 'react';\nimport { StyledStorie } from '../styles/stories';\n\nconst Storie = ({ storie }) => {\n  const { resourceURI, name } = storie;\n  return (\n    <StyledStorie>\n      <p key={resourceURI}>{name}</p>\n    </StyledStorie>\n  );\n};\n\nexport default Storie;\n","import Stories from './Stories';\n\nexport default Stories;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Storie from '../Storie';\nimport { StyledStories } from '../styles/stories';\n\nconst Stories = ({ stories }) => {\n  return (\n    <StyledStories>\n      <h4>Stories</h4>\n      {stories.items.map((storie, index) => {\n        if (index <= 2) {\n          return <Storie key={storie.resourceURI} storie={storie} />;\n        }\n        return null;\n      })}\n    </StyledStories>\n  );\n};\n\nStories.propTypes = {\n  stories: PropTypes.object.isRequired,\n};\n\nexport default Stories;\n","import Character from './Character';\n\nexport default Character;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { StyledCharacter, Header, Content } from '../styles/character';\nimport Comics from '../Comics';\nimport Series from '../Series';\nimport Stories from '../Stories';\n\nclass Character extends React.Component {\n  state = {\n    ...this.props.character,\n    selected: null,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.selected !== this.state.selected) {\n      this.setState({ selected: nextProps.selected });\n    }\n  }\n\n  render() {\n    const { handleClick, idx } = this.props;\n    const {\n      comics,\n      stories,\n      series,\n      name,\n      selected,\n      description,\n      thumbnail: { path, extension },\n    } = this.state;\n    const characterImg = `${path}.${extension}`;\n\n    return (\n      <StyledCharacter onClick={() => handleClick(idx)} selected={selected}>\n        <Header>\n          <img src={characterImg} alt=\"character\" />\n          <h4>Nombre: {name}</h4>\n          <p>\n            Descripción:{' '}\n            {description\n              ? description\n              : 'Ups! Parece que no he encontrado una descripción...'}\n          </p>\n        </Header>\n        <Content>\n          <Comics comics={comics} />\n          <Stories stories={stories} />\n          <Series series={series} />\n        </Content>\n      </StyledCharacter>\n    );\n  }\n}\n\nCharacter.propTypes = {\n  character: PropTypes.shape({\n    comics: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default Character;\n","const results = 12;\n\nexport const apikey = '2b338eb5f577d71ecf79c2347a55dc75';\nexport const filters = `limit=${results}`;\n","const characters = {\n  attributionHTML:\n    '<a href=\"http://marvel.com\">Data provided by Marvel. © 2019 MARVEL</a>',\n  attributionText: 'Data provided by Marvel. © 2019 MARVEL',\n  code: 200,\n  copyright: '© 2019 MARVEL',\n  data: {\n    count: 3,\n    limit: 3,\n    offset: 66,\n    results: [\n      {\n        comics: {\n          available: 21,\n          collectionURI:\n            'http://gateway.marvel.com/v1/public/characters/1011298/comics',\n          items: [\n            {\n              name: 'Astonishing X-Men (2004) #25',\n              resourceURI: 'http://gateway.marvel.com/v1/public/comics/21511',\n            },\n            {\n              name: 'Astonishing X-Men (2004) #26',\n              resourceURI: 'http://gateway.marvel.com/v1/public/comics/21714',\n            },\n            {\n              name: 'Astonishing X-Men (2004) #27',\n              resourceURI: 'http://gateway.marvel.com/v1/public/comics/21941',\n            },\n          ],\n          returned: 20,\n        },\n        description: '',\n        events: {\n          available: 0,\n          collectionURI:\n            'http://gateway.marvel.com/v1/public/characters/1011298/events',\n          items: [],\n          returned: 0,\n        },\n        id: 1011298,\n        modified: '1969-12-31T19:00:00-0500',\n        name: 'Armor (Hisako Ichiki)',\n        resourceURI: 'http://gateway.marvel.com/v1/public/characters/1011298',\n        series: {\n          available: 3,\n          collectionURI:\n            'http://gateway.marvel.com/v1/public/characters/1011298/series',\n          items: [\n            {\n              name: 'Astonishing X-Men (2004 - 2013)',\n              resourceURI: 'http://gateway.marvel.com/v1/public/series/744',\n            },\n            {\n              name: 'Cable (2017 - Present)',\n              resourceURI: 'http://gateway.marvel.com/v1/public/series/22386',\n            },\n            {\n              name: 'Cable Vol. 2: The Newer Mutants (2018)',\n              resourceURI: 'http://gateway.marvel.com/v1/public/series/22480',\n            },\n          ],\n          returned: 3,\n        },\n        stories: [\n          {\n            available: 3,\n            collectionURI:\n              'http://gateway.marvel.com/v1/public/characters/1011298/stories',\n            items: [\n              {\n                name: 'ASTONISHING X-MEN (2004) #25',\n                resourceURI:\n                  'http://gateway.marvel.com/v1/public/stories/47427',\n                type: 'cover',\n              },\n              {\n                name: 'ASTONISHING X-MEN (2004) #26',\n                resourceURI:\n                  'http://gateway.marvel.com/v1/public/stories/47735',\n                type: 'cover',\n              },\n              {\n                name: 'ASTONISHING X-MEN (2004) #27',\n                resourceURI:\n                  'http://gateway.marvel.com/v1/public/stories/48233',\n                type: 'cover',\n              },\n            ],\n            returned: 3,\n          },\n        ],\n        thumbnail: {\n          path: 'http://i.annihil.us/u/prod/marvel/i/mg/9/20/4c002e6cbf990',\n          extension: 'jpg',\n        },\n        urls: [\n          {\n            type: 'detail',\n            url:\n              'http://marvel.com/comics/characters/1011298/armor_hisako_ichiki?utm_campaign=apiRef&utm_source=2b338eb5f577d71ecf79c2347a55dc75',\n          },\n          {\n            type: 'wiki',\n            url:\n              'http://marvel.com/universe/Armor_(Hisako_Ichiki)?utm_campaign=apiRef&utm_source=2b338eb5f577d71ecf79c2347a55dc75',\n          },\n          {\n            type: 'comiclink',\n            url:\n              'http://marvel.com/comics/characters/1011298/armor_hisako_ichiki?utm_campaign=apiRef&utm_source=2b338eb5f577d71ecf79c2347a55dc75',\n          },\n        ],\n      },\n      {\n        comics: {\n          available: 21,\n          collectionURI:\n            'http://gateway.marvel.com/v1/public/characters/1011298/comics',\n          items: [\n            {\n              name: 'Astonishing X-Men (2004) #25',\n              resourceURI: 'http://gateway.marvel.com/v1/public/comics/21511',\n            },\n            {\n              name: 'Astonishing X-Men (2004) #26',\n              resourceURI: 'http://gateway.marvel.com/v1/public/comics/21714',\n            },\n            {\n              name: 'Astonishing X-Men (2004) #27',\n              resourceURI: 'http://gateway.marvel.com/v1/public/comics/21941',\n            },\n          ],\n          returned: 20,\n        },\n        description: '',\n        events: {\n          available: 0,\n          collectionURI:\n            'http://gateway.marvel.com/v1/public/characters/1011298/events',\n          items: [],\n          returned: 0,\n        },\n        id: 1011297,\n        modified: '1969-12-31T19:00:00-0500',\n        name: 'Armor (Hisako Ichiki)',\n        resourceURI: 'http://gateway.marvel.com/v1/public/characters/1011298',\n        series: {\n          available: 3,\n          collectionURI:\n            'http://gateway.marvel.com/v1/public/characters/1011298/series',\n          items: [\n            {\n              name: 'Astonishing X-Men (2004 - 2013)',\n              resourceURI: 'http://gateway.marvel.com/v1/public/series/744',\n            },\n            {\n              name: 'Cable (2017 - Present)',\n              resourceURI: 'http://gateway.marvel.com/v1/public/series/22386',\n            },\n            {\n              name: 'Cable Vol. 2: The Newer Mutants (2018)',\n              resourceURI: 'http://gateway.marvel.com/v1/public/series/22480',\n            },\n          ],\n          returned: 3,\n        },\n        stories: [\n          {\n            available: 3,\n            collectionURI:\n              'http://gateway.marvel.com/v1/public/characters/1011298/stories',\n            items: [\n              {\n                name: 'ASTONISHING X-MEN (2004) #25',\n                resourceURI:\n                  'http://gateway.marvel.com/v1/public/stories/47427',\n                type: 'cover',\n              },\n              {\n                name: 'ASTONISHING X-MEN (2004) #26',\n                resourceURI:\n                  'http://gateway.marvel.com/v1/public/stories/47735',\n                type: 'cover',\n              },\n              {\n                name: 'ASTONISHING X-MEN (2004) #27',\n                resourceURI:\n                  'http://gateway.marvel.com/v1/public/stories/48233',\n                type: 'cover',\n              },\n            ],\n            returned: 3,\n          },\n        ],\n        thumbnail: {\n          path: 'http://i.annihil.us/u/prod/marvel/i/mg/9/20/4c002e6cbf990',\n          extension: 'jpg',\n        },\n        urls: [\n          {\n            type: 'detail',\n            url:\n              'http://marvel.com/comics/characters/1011298/armor_hisako_ichiki?utm_campaign=apiRef&utm_source=2b338eb5f577d71ecf79c2347a55dc75',\n          },\n          {\n            type: 'wiki',\n            url:\n              'http://marvel.com/universe/Armor_(Hisako_Ichiki)?utm_campaign=apiRef&utm_source=2b338eb5f577d71ecf79c2347a55dc75',\n          },\n          {\n            type: 'comiclink',\n            url:\n              'http://marvel.com/comics/characters/1011298/armor_hisako_ichiki?utm_campaign=apiRef&utm_source=2b338eb5f577d71ecf79c2347a55dc75',\n          },\n        ],\n      },\n      {\n        comics: {\n          available: 21,\n          collectionURI:\n            'http://gateway.marvel.com/v1/public/characters/1011298/comics',\n          items: [\n            {\n              name: 'Astonishing X-Men (2004) #25',\n              resourceURI: 'http://gateway.marvel.com/v1/public/comics/21511',\n            },\n            {\n              name: 'Astonishing X-Men (2004) #26',\n              resourceURI: 'http://gateway.marvel.com/v1/public/comics/21714',\n            },\n            {\n              name: 'Astonishing X-Men (2004) #27',\n              resourceURI: 'http://gateway.marvel.com/v1/public/comics/21941',\n            },\n          ],\n          returned: 20,\n        },\n        description: '',\n        events: {\n          available: 0,\n          collectionURI:\n            'http://gateway.marvel.com/v1/public/characters/1011298/events',\n          items: [],\n          returned: 0,\n        },\n        id: 1011296,\n        modified: '1969-12-31T19:00:00-0500',\n        name: 'Armor (Hisako Ichiki)',\n        resourceURI: 'http://gateway.marvel.com/v1/public/characters/1011298',\n        series: {\n          available: 3,\n          collectionURI:\n            'http://gateway.marvel.com/v1/public/characters/1011298/series',\n          items: [\n            {\n              name: 'Astonishing X-Men (2004 - 2013)',\n              resourceURI: 'http://gateway.marvel.com/v1/public/series/744',\n            },\n            {\n              name: 'Cable (2017 - Present)',\n              resourceURI: 'http://gateway.marvel.com/v1/public/series/22386',\n            },\n            {\n              name: 'Cable Vol. 2: The Newer Mutants (2018)',\n              resourceURI: 'http://gateway.marvel.com/v1/public/series/22480',\n            },\n          ],\n          returned: 3,\n        },\n        stories: [\n          {\n            available: 3,\n            collectionURI:\n              'http://gateway.marvel.com/v1/public/characters/1011298/stories',\n            items: [\n              {\n                name: 'ASTONISHING X-MEN (2004) #25',\n                resourceURI:\n                  'http://gateway.marvel.com/v1/public/stories/47427',\n                type: 'cover',\n              },\n              {\n                name: 'ASTONISHING X-MEN (2004) #26',\n                resourceURI:\n                  'http://gateway.marvel.com/v1/public/stories/47735',\n                type: 'cover',\n              },\n              {\n                name: 'ASTONISHING X-MEN (2004) #27',\n                resourceURI:\n                  'http://gateway.marvel.com/v1/public/stories/48233',\n                type: 'cover',\n              },\n            ],\n            returned: 3,\n          },\n        ],\n        thumbnail: {\n          path: 'http://i.annihil.us/u/prod/marvel/i/mg/9/20/4c002e6cbf990',\n          extension: 'jpg',\n        },\n        urls: [\n          {\n            type: 'detail',\n            url:\n              'http://marvel.com/comics/characters/1011298/armor_hisako_ichiki?utm_campaign=apiRef&utm_source=2b338eb5f577d71ecf79c2347a55dc75',\n          },\n          {\n            type: 'wiki',\n            url:\n              'http://marvel.com/universe/Armor_(Hisako_Ichiki)?utm_campaign=apiRef&utm_source=2b338eb5f577d71ecf79c2347a55dc75',\n          },\n          {\n            type: 'comiclink',\n            url:\n              'http://marvel.com/comics/characters/1011298/armor_hisako_ichiki?utm_campaign=apiRef&utm_source=2b338eb5f577d71ecf79c2347a55dc75',\n          },\n        ],\n      },\n    ],\n    total: 3,\n  },\n  etag: 'eaa98eb278c077f42054edf36dbdd41264de8ff9',\n  status: 'Ok',\n};\n\nexport default characters;\n","import axios from 'axios';\nimport Promise from 'bluebird';\nimport { apikey } from '../config';\n\nconst options = { params: { apikey } };\n\nexport default {\n  getComics: (URL) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { data } = await axios(URL, options);\n\n        resolve(data.data.results);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  },\n  getComic: (URL) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { data } = await axios(URL, options);\n\n        resolve(data.data.results);\n      } catch (error) {\n        console.error(error);\n\n        reject(error);\n      }\n    });\n  },\n};\n","import axios from 'axios';\nimport Promise from 'bluebird';\nimport { apikey } from '../config';\n\nconst options = { params: { apikey } };\n\nexport default {\n  getSeries: (URL) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { data } = await axios(URL, options);\n\n        resolve(data.data.results);\n      } catch (error) {\n        console.error(error);\n\n        reject(error);\n      }\n    });\n  },\n  getSerie: (URL) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { data } = await axios(URL, options);\n\n        resolve(data.data.results[0]);\n      } catch (error) {\n        console.error(error);\n\n        reject(error);\n      }\n    });\n  },\n};\n","import axios from 'axios';\nimport Promise from 'bluebird';\n\nimport { apikey } from '../config';\n\nconst options = { params: { apikey } };\n\nexport default {\n  getStories: (URL) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { data } = await axios(URL, options);\n\n        resolve(data.data.results);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  },\n  getStorie: (URL) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { data } = await axios(URL, options);\n\n        resolve(data.data.results);\n      } catch (error) {\n        console.error(error);\n        reject(error);\n      }\n    });\n  },\n};\n","import characters from './characters';\nimport comics from './comics';\nimport series from './series';\nimport stories from './stories';\n\nexport default {\n  comics,\n  characters,\n  series,\n  stories,\n};\n","import axios from 'axios';\nimport Promise from 'bluebird';\nimport { filters, apikey } from '../config';\nimport mockedCharacters from '../db/mockedCharacters';\n\nconst charactersURL = 'https://gateway.marvel.com/v1/public/characters';\n\nexport default {\n  getCharacters: (character = 'Thor') => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const URL = `${charactersURL}?apikey=${apikey}&${filters}&nameStartsWith=${character}`;\n        const { data } = await axios(URL);\n\n        resolve(data.data.results);\n      } catch (error) {\n        console.error(error);\n\n        reject(mockedCharacters.data.results);\n      }\n    });\n  },\n  getCharacter: (URL) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { data } = await axios(`${URL}?apikey=${apikey}`);\n\n        resolve(data.data.results);\n      } catch (error) {\n        console.error(error);\n\n        reject(error);\n      }\n    });\n  },\n};\n","import styled from 'styled-components';\n\nexport const CharacterContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-gap: 10px;\n  opacity: ${({ active }) => active};\n  transition: opacity 1.2s ease-in-out;\n`;\n\nexport const CharacterTitle = styled.h1`\n  align-items: center;\n  color: #fff;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 0;\n  text-shadow: 1px 1px rgba(0, 0, 0, 0.6);\n`;\n","import SearchContainer from './containers/SearchContainer';\n\nexport default SearchContainer;\n","import React, { Component } from 'react';\n\nimport SearchHeroes from '../../../components/SearchHeroes';\nimport Character from '../../../components/Character';\nimport MarvelAPI from '../../../api';\nimport { CharacterContainer, CharacterTitle } from '../styles/styles';\n\nclass SearchView extends Component {\n  state = {\n    characters: [],\n    selectedIndex: 0,\n  };\n\n  componentDidMount() {\n    this.getCharacters();\n  }\n\n  handleClick = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  handleChange = (character) => {\n    this.getCharacters(character);\n  };\n\n  getCharacters = async (character) => {\n    const characters = await MarvelAPI.characters.getCharacters(character);\n    this.setState({ characters });\n  };\n\n  render() {\n    const { characters, selectedIndex } = this.state;\n    return (\n      <div>\n        <CharacterTitle>Buscador de Heroes de Marvel</CharacterTitle>\n        <SearchHeroes handleChange={this.handleChange} />\n        <CharacterContainer active={characters.length && 1}>\n          {characters.map((character, idx) => (\n            <Character\n              key={character.id}\n              character={character}\n              handleClick={this.handleClick}\n              selected={selectedIndex === idx}\n              idx={idx}\n            />\n          ))}\n        </CharacterContainer>\n      </div>\n    );\n  }\n}\n\nexport default SearchView;\n","import React from 'react';\nimport { Router, Route, Switch } from 'react-router';\nimport createBrowserHistory from 'history/createBrowserHistory';\n\n// Public pages\nimport NotFound from '../../views/NotFound';\nimport Main from '../../../routes/Search';\n\nconst customHistory = createBrowserHistory();\n\nconst getDefaults = () => {};\nconst fetchCommonData = () => {\n  getDefaults();\n};\n\nconst App = () => {\n  return (\n    <Router history={customHistory}>\n      <Switch>\n        <Route\n          path=\"/\"\n          render={() => {\n            fetchCommonData();\n            return <Main />;\n          }}\n        />\n        <Route path=\"*\" component={NotFound} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/views/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}